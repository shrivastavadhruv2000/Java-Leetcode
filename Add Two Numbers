/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode first=new ListNode();
        ListNode current=first;
        ListNode temp1=l1;
        ListNode temp2=l2;
        int sum=0;
        while(temp1!=null ||temp2!=null){
            int newsum=sum;
            if(temp1!=null){
                newsum+=temp1.val;
            }
             if(temp2!=null){
                newsum+=temp2.val;
            }
            ListNode newNode=new ListNode(newsum%10);
            sum=newsum/10;
            current.next=newNode;
            current=current.next;
            if(temp1!=null){
                temp1=temp1.next;
            }
             if(temp2!=null){
                temp2=temp2.next;
            }
        }
        if(sum>0){
            ListNode newNode=new ListNode(sum);
            current.next=newNode;
        }
        return first.next;

        
    }
}
